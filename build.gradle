buildscript {
    repositories {
        maven {
            url MAVEN_REPOSITORY_CENTRAL
            allowInsecureProtocol = true
        }
    }

    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.7.RELEASE'
    }
}

def versionMap = [
        "jackson": "2.14.2"
]

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'


group 'com.xjbg'
version "1.0.0-SNAPSHOT"


configurations.configureEach {
    // 动态版本
    resolutionStrategy.cacheDynamicVersionsFor 0, 'minutes'
    // 变化模块
    resolutionStrategy.cacheChangingModulesFor 0, 'minutes'
}

repositories {
    maven {
        allowInsecureProtocol = true
        url MAVEN_REPOSITORY_CENTRAL
    }
}


tasks.register('sourcesJar', Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

publishing {
    repositories {
        mavenLocal()
        maven {
            credentials {
                username MAVEN_REPOSITORY_USER
                password MAVEN_REPOSITORY_PWD
            }
            allowInsecureProtocol = true
            if (project.version.endsWith('-SNAPSHOT')) {
                url MAVEN_REPOSITORY_SNAPSHOT
            } else {
                url MAVEN_REPOSITORY_RELEASE
            }
        }
    }
    publications {
        maven(MavenPublication) {
            pom {
                packaging 'jar'
            }
            groupId project.group
            artifactId project.name
            version project.version

            from components.java
            artifact sourcesJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
        }
    }
}

dependencyManagement {
    dependencies {
        dependency 'org.projectlombok:lombok:1.18.30'
        dependency 'jakarta.json:jakarta.json-api:2.1.3'
        dependency 'org.apache.commons:commons-lang3:3.13.0'
        dependency 'org.apache.commons:commons-collections4:4.4'
        dependency 'org.antlr:antlr4-runtime:4.13.1'
//        dependency "org.elasticsearch:elasticsearch:8.15.0"
        dependency "org.elasticsearch:elasticsearch:7.17.10"
        dependency group: 'junit', name: 'junit', version: '4.13'
        dependency 'org.slf4j:slf4j-api:1.7.36'
        dependency 'ch.qos.logback:logback-classic:1.2.3'
    }
    imports {
        mavenBom "com.fasterxml.jackson:jackson-bom:$versionMap.jackson"
    }
}

dependencies {
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.antlr:antlr4-runtime'
    implementation 'org.apache.commons:commons-lang3'
    implementation 'org.elasticsearch:elasticsearch'

    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation 'junit:junit'
    testImplementation 'ch.qos.logback:logback-classic'
}